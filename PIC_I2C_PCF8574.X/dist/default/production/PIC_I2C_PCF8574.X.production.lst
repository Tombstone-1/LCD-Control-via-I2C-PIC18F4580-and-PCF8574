

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Aug 12 23:45:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23   000000                     
    24                           ; Generated 17/01/2025 GMT
    25                           ; 
    26                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4580 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000D60                     RXF6SIDH        equ	3424	;# 
   100   000D61                     RXF6SIDL        equ	3425	;# 
   101   000D62                     RXF6EIDH        equ	3426	;# 
   102   000D63                     RXF6EIDL        equ	3427	;# 
   103   000D64                     RXF7SIDH        equ	3428	;# 
   104   000D65                     RXF7SIDL        equ	3429	;# 
   105   000D66                     RXF7EIDH        equ	3430	;# 
   106   000D67                     RXF7EIDL        equ	3431	;# 
   107   000D68                     RXF8SIDH        equ	3432	;# 
   108   000D69                     RXF8SIDL        equ	3433	;# 
   109   000D6A                     RXF8EIDH        equ	3434	;# 
   110   000D6B                     RXF8EIDL        equ	3435	;# 
   111   000D70                     RXF9SIDH        equ	3440	;# 
   112   000D71                     RXF9SIDL        equ	3441	;# 
   113   000D72                     RXF9EIDH        equ	3442	;# 
   114   000D73                     RXF9EIDL        equ	3443	;# 
   115   000D74                     RXF10SIDH       equ	3444	;# 
   116   000D75                     RXF10SIDL       equ	3445	;# 
   117   000D76                     RXF10EIDH       equ	3446	;# 
   118   000D77                     RXF10EIDL       equ	3447	;# 
   119   000D78                     RXF11SIDH       equ	3448	;# 
   120   000D79                     RXF11SIDL       equ	3449	;# 
   121   000D7A                     RXF11EIDH       equ	3450	;# 
   122   000D7B                     RXF11EIDL       equ	3451	;# 
   123   000D80                     RXF12SIDH       equ	3456	;# 
   124   000D81                     RXF12SIDL       equ	3457	;# 
   125   000D82                     RXF12EIDH       equ	3458	;# 
   126   000D83                     RXF12EIDL       equ	3459	;# 
   127   000D84                     RXF13SIDH       equ	3460	;# 
   128   000D85                     RXF13SIDL       equ	3461	;# 
   129   000D86                     RXF13EIDH       equ	3462	;# 
   130   000D87                     RXF13EIDL       equ	3463	;# 
   131   000D88                     RXF14SIDH       equ	3464	;# 
   132   000D89                     RXF14SIDL       equ	3465	;# 
   133   000D8A                     RXF14EIDH       equ	3466	;# 
   134   000D8B                     RXF14EIDL       equ	3467	;# 
   135   000D90                     RXF15SIDH       equ	3472	;# 
   136   000D91                     RXF15SIDL       equ	3473	;# 
   137   000D92                     RXF15EIDH       equ	3474	;# 
   138   000D93                     RXF15EIDL       equ	3475	;# 
   139   000DD4                     RXFCON0         equ	3540	;# 
   140   000DD5                     RXFCON1         equ	3541	;# 
   141   000DD8                     SDFLC           equ	3544	;# 
   142   000DE0                     RXFBCON0        equ	3552	;# 
   143   000DE1                     RXFBCON1        equ	3553	;# 
   144   000DE2                     RXFBCON2        equ	3554	;# 
   145   000DE3                     RXFBCON3        equ	3555	;# 
   146   000DE4                     RXFBCON4        equ	3556	;# 
   147   000DE5                     RXFBCON5        equ	3557	;# 
   148   000DE6                     RXFBCON6        equ	3558	;# 
   149   000DE7                     RXFBCON7        equ	3559	;# 
   150   000DF0                     MSEL0           equ	3568	;# 
   151   000DF1                     MSEL1           equ	3569	;# 
   152   000DF2                     MSEL2           equ	3570	;# 
   153   000DF3                     MSEL3           equ	3571	;# 
   154   000DF8                     BSEL0           equ	3576	;# 
   155   000DFA                     BIE0            equ	3578	;# 
   156   000DFC                     TXBIE           equ	3580	;# 
   157   000E20                     B0CON           equ	3616	;# 
   158   000E21                     B0SIDH          equ	3617	;# 
   159   000E22                     B0SIDL          equ	3618	;# 
   160   000E23                     B0EIDH          equ	3619	;# 
   161   000E24                     B0EIDL          equ	3620	;# 
   162   000E25                     B0DLC           equ	3621	;# 
   163   000E26                     B0D0            equ	3622	;# 
   164   000E27                     B0D1            equ	3623	;# 
   165   000E28                     B0D2            equ	3624	;# 
   166   000E29                     B0D3            equ	3625	;# 
   167   000E2A                     B0D4            equ	3626	;# 
   168   000E2B                     B0D5            equ	3627	;# 
   169   000E2C                     B0D6            equ	3628	;# 
   170   000E2D                     B0D7            equ	3629	;# 
   171   000E2E                     CANSTAT_RO9     equ	3630	;# 
   172   000E2F                     CANCON_RO9      equ	3631	;# 
   173   000E30                     B1CON           equ	3632	;# 
   174   000E31                     B1SIDH          equ	3633	;# 
   175   000E32                     B1SIDL          equ	3634	;# 
   176   000E33                     B1EIDH          equ	3635	;# 
   177   000E34                     B1EIDL          equ	3636	;# 
   178   000E35                     B1DLC           equ	3637	;# 
   179   000E36                     B1D0            equ	3638	;# 
   180   000E37                     B1D1            equ	3639	;# 
   181   000E38                     B1D2            equ	3640	;# 
   182   000E39                     B1D3            equ	3641	;# 
   183   000E3A                     B1D4            equ	3642	;# 
   184   000E3B                     B1D5            equ	3643	;# 
   185   000E3C                     B1D6            equ	3644	;# 
   186   000E3D                     B1D7            equ	3645	;# 
   187   000E3E                     CANSTAT_RO8     equ	3646	;# 
   188   000E3F                     CANCON_RO8      equ	3647	;# 
   189   000E40                     B2CON           equ	3648	;# 
   190   000E41                     B2SIDH          equ	3649	;# 
   191   000E42                     B2SIDL          equ	3650	;# 
   192   000E43                     B2EIDH          equ	3651	;# 
   193   000E44                     B2EIDL          equ	3652	;# 
   194   000E45                     B2DLC           equ	3653	;# 
   195   000E46                     B2D0            equ	3654	;# 
   196   000E47                     B2D1            equ	3655	;# 
   197   000E48                     B2D2            equ	3656	;# 
   198   000E49                     B2D3            equ	3657	;# 
   199   000E4A                     B2D4            equ	3658	;# 
   200   000E4B                     B2D5            equ	3659	;# 
   201   000E4C                     B2D6            equ	3660	;# 
   202   000E4D                     B2D7            equ	3661	;# 
   203   000E4E                     CANSTAT_RO7     equ	3662	;# 
   204   000E4F                     CANCON_RO7      equ	3663	;# 
   205   000E50                     B3CON           equ	3664	;# 
   206   000E51                     B3SIDH          equ	3665	;# 
   207   000E52                     B3SIDL          equ	3666	;# 
   208   000E53                     B3EIDH          equ	3667	;# 
   209   000E54                     B3EIDL          equ	3668	;# 
   210   000E55                     B3DLC           equ	3669	;# 
   211   000E56                     B3D0            equ	3670	;# 
   212   000E57                     B3D1            equ	3671	;# 
   213   000E58                     B3D2            equ	3672	;# 
   214   000E59                     B3D3            equ	3673	;# 
   215   000E5A                     B3D4            equ	3674	;# 
   216   000E5B                     B3D5            equ	3675	;# 
   217   000E5C                     B3D6            equ	3676	;# 
   218   000E5D                     B3D7            equ	3677	;# 
   219   000E5E                     CANSTAT_RO6     equ	3678	;# 
   220   000E5F                     CANCON_RO6      equ	3679	;# 
   221   000E60                     B4CON           equ	3680	;# 
   222   000E61                     B4SIDH          equ	3681	;# 
   223   000E62                     B4SIDL          equ	3682	;# 
   224   000E63                     B4EIDH          equ	3683	;# 
   225   000E64                     B4EIDL          equ	3684	;# 
   226   000E65                     B4DLC           equ	3685	;# 
   227   000E66                     B4D0            equ	3686	;# 
   228   000E67                     B4D1            equ	3687	;# 
   229   000E68                     B4D2            equ	3688	;# 
   230   000E69                     B4D3            equ	3689	;# 
   231   000E6A                     B4D4            equ	3690	;# 
   232   000E6B                     B4D5            equ	3691	;# 
   233   000E6C                     B4D6            equ	3692	;# 
   234   000E6D                     B4D7            equ	3693	;# 
   235   000E6E                     CANSTAT_RO5     equ	3694	;# 
   236   000E6F                     CANCON_RO5      equ	3695	;# 
   237   000E70                     B5CON           equ	3696	;# 
   238   000E71                     B5SIDH          equ	3697	;# 
   239   000E72                     B5SIDL          equ	3698	;# 
   240   000E73                     B5EIDH          equ	3699	;# 
   241   000E74                     B5EIDL          equ	3700	;# 
   242   000E75                     B5DLC           equ	3701	;# 
   243   000E76                     B5D0            equ	3702	;# 
   244   000E77                     B5D1            equ	3703	;# 
   245   000E78                     B5D2            equ	3704	;# 
   246   000E79                     B5D3            equ	3705	;# 
   247   000E7A                     B5D4            equ	3706	;# 
   248   000E7B                     B5D5            equ	3707	;# 
   249   000E7C                     B5D6            equ	3708	;# 
   250   000E7D                     B5D7            equ	3709	;# 
   251   000E7E                     CANSTAT_RO4     equ	3710	;# 
   252   000E7F                     CANCON_RO4      equ	3711	;# 
   253   000F00                     RXF0SIDH        equ	3840	;# 
   254   000F01                     RXF0SIDL        equ	3841	;# 
   255   000F02                     RXF0EIDH        equ	3842	;# 
   256   000F03                     RXF0EIDL        equ	3843	;# 
   257   000F04                     RXF1SIDH        equ	3844	;# 
   258   000F05                     RXF1SIDL        equ	3845	;# 
   259   000F06                     RXF1EIDH        equ	3846	;# 
   260   000F07                     RXF1EIDL        equ	3847	;# 
   261   000F08                     RXF2SIDH        equ	3848	;# 
   262   000F09                     RXF2SIDL        equ	3849	;# 
   263   000F0A                     RXF2EIDH        equ	3850	;# 
   264   000F0B                     RXF2EIDL        equ	3851	;# 
   265   000F0C                     RXF3SIDH        equ	3852	;# 
   266   000F0D                     RXF3SIDL        equ	3853	;# 
   267   000F0E                     RXF3EIDH        equ	3854	;# 
   268   000F0F                     RXF3EIDL        equ	3855	;# 
   269   000F10                     RXF4SIDH        equ	3856	;# 
   270   000F11                     RXF4SIDL        equ	3857	;# 
   271   000F12                     RXF4EIDH        equ	3858	;# 
   272   000F13                     RXF4EIDL        equ	3859	;# 
   273   000F14                     RXF5SIDH        equ	3860	;# 
   274   000F15                     RXF5SIDL        equ	3861	;# 
   275   000F16                     RXF5EIDH        equ	3862	;# 
   276   000F17                     RXF5EIDL        equ	3863	;# 
   277   000F18                     RXM0SIDH        equ	3864	;# 
   278   000F19                     RXM0SIDL        equ	3865	;# 
   279   000F1A                     RXM0EIDH        equ	3866	;# 
   280   000F1B                     RXM0EIDL        equ	3867	;# 
   281   000F1C                     RXM1SIDH        equ	3868	;# 
   282   000F1D                     RXM1SIDL        equ	3869	;# 
   283   000F1E                     RXM1EIDH        equ	3870	;# 
   284   000F1F                     RXM1EIDL        equ	3871	;# 
   285   000F20                     TXB2CON         equ	3872	;# 
   286   000F21                     TXB2SIDH        equ	3873	;# 
   287   000F22                     TXB2SIDL        equ	3874	;# 
   288   000F23                     TXB2EIDH        equ	3875	;# 
   289   000F24                     TXB2EIDL        equ	3876	;# 
   290   000F25                     TXB2DLC         equ	3877	;# 
   291   000F26                     TXB2D0          equ	3878	;# 
   292   000F27                     TXB2D1          equ	3879	;# 
   293   000F28                     TXB2D2          equ	3880	;# 
   294   000F29                     TXB2D3          equ	3881	;# 
   295   000F2A                     TXB2D4          equ	3882	;# 
   296   000F2B                     TXB2D5          equ	3883	;# 
   297   000F2C                     TXB2D6          equ	3884	;# 
   298   000F2D                     TXB2D7          equ	3885	;# 
   299   000F2E                     CANSTAT_RO3     equ	3886	;# 
   300   000F2F                     CANCON_RO3      equ	3887	;# 
   301   000F30                     TXB1CON         equ	3888	;# 
   302   000F31                     TXB1SIDH        equ	3889	;# 
   303   000F32                     TXB1SIDL        equ	3890	;# 
   304   000F33                     TXB1EIDH        equ	3891	;# 
   305   000F34                     TXB1EIDL        equ	3892	;# 
   306   000F35                     TXB1DLC         equ	3893	;# 
   307   000F36                     TXB1D0          equ	3894	;# 
   308   000F37                     TXB1D1          equ	3895	;# 
   309   000F38                     TXB1D2          equ	3896	;# 
   310   000F39                     TXB1D3          equ	3897	;# 
   311   000F3A                     TXB1D4          equ	3898	;# 
   312   000F3B                     TXB1D5          equ	3899	;# 
   313   000F3C                     TXB1D6          equ	3900	;# 
   314   000F3D                     TXB1D7          equ	3901	;# 
   315   000F3E                     CANSTAT_RO2     equ	3902	;# 
   316   000F3F                     CANCON_RO2      equ	3903	;# 
   317   000F40                     TXB0CON         equ	3904	;# 
   318   000F41                     TXB0SIDH        equ	3905	;# 
   319   000F42                     TXB0SIDL        equ	3906	;# 
   320   000F43                     TXB0EIDH        equ	3907	;# 
   321   000F44                     TXB0EIDL        equ	3908	;# 
   322   000F45                     TXB0DLC         equ	3909	;# 
   323   000F46                     TXB0D0          equ	3910	;# 
   324   000F47                     TXB0D1          equ	3911	;# 
   325   000F48                     TXB0D2          equ	3912	;# 
   326   000F49                     TXB0D3          equ	3913	;# 
   327   000F4A                     TXB0D4          equ	3914	;# 
   328   000F4B                     TXB0D5          equ	3915	;# 
   329   000F4C                     TXB0D6          equ	3916	;# 
   330   000F4D                     TXB0D7          equ	3917	;# 
   331   000F4E                     CANSTAT_RO1     equ	3918	;# 
   332   000F4F                     CANCON_RO1      equ	3919	;# 
   333   000F50                     RXB1CON         equ	3920	;# 
   334   000F51                     RXB1SIDH        equ	3921	;# 
   335   000F52                     RXB1SIDL        equ	3922	;# 
   336   000F53                     RXB1EIDH        equ	3923	;# 
   337   000F54                     RXB1EIDL        equ	3924	;# 
   338   000F55                     RXB1DLC         equ	3925	;# 
   339   000F56                     RXB1D0          equ	3926	;# 
   340   000F57                     RXB1D1          equ	3927	;# 
   341   000F58                     RXB1D2          equ	3928	;# 
   342   000F59                     RXB1D3          equ	3929	;# 
   343   000F5A                     RXB1D4          equ	3930	;# 
   344   000F5B                     RXB1D5          equ	3931	;# 
   345   000F5C                     RXB1D6          equ	3932	;# 
   346   000F5D                     RXB1D7          equ	3933	;# 
   347   000F5E                     CANSTAT_RO0     equ	3934	;# 
   348   000F5F                     CANCON_RO0      equ	3935	;# 
   349   000F60                     RXB0CON         equ	3936	;# 
   350   000F61                     RXB0SIDH        equ	3937	;# 
   351   000F62                     RXB0SIDL        equ	3938	;# 
   352   000F63                     RXB0EIDH        equ	3939	;# 
   353   000F64                     RXB0EIDL        equ	3940	;# 
   354   000F65                     RXB0DLC         equ	3941	;# 
   355   000F66                     RXB0D0          equ	3942	;# 
   356   000F67                     RXB0D1          equ	3943	;# 
   357   000F68                     RXB0D2          equ	3944	;# 
   358   000F69                     RXB0D3          equ	3945	;# 
   359   000F6A                     RXB0D4          equ	3946	;# 
   360   000F6B                     RXB0D5          equ	3947	;# 
   361   000F6C                     RXB0D6          equ	3948	;# 
   362   000F6D                     RXB0D7          equ	3949	;# 
   363   000F6E                     CANSTAT         equ	3950	;# 
   364   000F6F                     CANCON          equ	3951	;# 
   365   000F70                     BRGCON1         equ	3952	;# 
   366   000F71                     BRGCON2         equ	3953	;# 
   367   000F72                     BRGCON3         equ	3954	;# 
   368   000F73                     CIOCON          equ	3955	;# 
   369   000F74                     COMSTAT         equ	3956	;# 
   370   000F75                     RXERRCNT        equ	3957	;# 
   371   000F76                     TXERRCNT        equ	3958	;# 
   372   000F77                     ECANCON         equ	3959	;# 
   373   000F80                     PORTA           equ	3968	;# 
   374   000F81                     PORTB           equ	3969	;# 
   375   000F82                     PORTC           equ	3970	;# 
   376   000F83                     PORTD           equ	3971	;# 
   377   000F84                     PORTE           equ	3972	;# 
   378   000F89                     LATA            equ	3977	;# 
   379   000F8A                     LATB            equ	3978	;# 
   380   000F8B                     LATC            equ	3979	;# 
   381   000F8C                     LATD            equ	3980	;# 
   382   000F8D                     LATE            equ	3981	;# 
   383   000F92                     TRISA           equ	3986	;# 
   384   000F92                     DDRA            equ	3986	;# 
   385   000F93                     TRISB           equ	3987	;# 
   386   000F93                     DDRB            equ	3987	;# 
   387   000F94                     TRISC           equ	3988	;# 
   388   000F94                     DDRC            equ	3988	;# 
   389   000F95                     TRISD           equ	3989	;# 
   390   000F95                     DDRD            equ	3989	;# 
   391   000F96                     TRISE           equ	3990	;# 
   392   000F96                     DDRE            equ	3990	;# 
   393   000F9B                     OSCTUNE         equ	3995	;# 
   394   000F9D                     PIE1            equ	3997	;# 
   395   000F9E                     PIR1            equ	3998	;# 
   396   000F9F                     IPR1            equ	3999	;# 
   397   000FA0                     PIE2            equ	4000	;# 
   398   000FA1                     PIR2            equ	4001	;# 
   399   000FA2                     IPR2            equ	4002	;# 
   400   000FA3                     PIE3            equ	4003	;# 
   401   000FA4                     PIR3            equ	4004	;# 
   402   000FA5                     IPR3            equ	4005	;# 
   403   000FA6                     EECON1          equ	4006	;# 
   404   000FA7                     EECON2          equ	4007	;# 
   405   000FA8                     EEDATA          equ	4008	;# 
   406   000FA9                     EEADR           equ	4009	;# 
   407   000FAB                     RCSTA           equ	4011	;# 
   408   000FAB                     RCSTA1          equ	4011	;# 
   409   000FAC                     TXSTA           equ	4012	;# 
   410   000FAC                     TXSTA1          equ	4012	;# 
   411   000FAD                     TXREG           equ	4013	;# 
   412   000FAD                     TXREG1          equ	4013	;# 
   413   000FAE                     RCREG           equ	4014	;# 
   414   000FAE                     RCREG1          equ	4014	;# 
   415   000FAF                     SPBRG           equ	4015	;# 
   416   000FAF                     SPBRG1          equ	4015	;# 
   417   000FB0                     SPBRGH          equ	4016	;# 
   418   000FB1                     T3CON           equ	4017	;# 
   419   000FB2                     TMR3            equ	4018	;# 
   420   000FB2                     TMR3L           equ	4018	;# 
   421   000FB3                     TMR3H           equ	4019	;# 
   422   000FB4                     CMCON           equ	4020	;# 
   423   000FB5                     CVRCON          equ	4021	;# 
   424   000FB6                     ECCP1AS         equ	4022	;# 
   425   000FB7                     ECCP1DEL        equ	4023	;# 
   426   000FB8                     BAUDCON         equ	4024	;# 
   427   000FB8                     BAUDCTL         equ	4024	;# 
   428   000FBA                     ECCP1CON        equ	4026	;# 
   429   000FBB                     ECCPR1          equ	4027	;# 
   430   000FBB                     ECCPR1L         equ	4027	;# 
   431   000FBC                     ECCPR1H         equ	4028	;# 
   432   000FBD                     CCP1CON         equ	4029	;# 
   433   000FBE                     CCPR1           equ	4030	;# 
   434   000FBE                     CCPR1L          equ	4030	;# 
   435   000FBF                     CCPR1H          equ	4031	;# 
   436   000FC0                     ADCON2          equ	4032	;# 
   437   000FC1                     ADCON1          equ	4033	;# 
   438   000FC2                     ADCON0          equ	4034	;# 
   439   000FC3                     ADRES           equ	4035	;# 
   440   000FC3                     ADRESL          equ	4035	;# 
   441   000FC4                     ADRESH          equ	4036	;# 
   442   000FC5                     SSPCON2         equ	4037	;# 
   443   000FC6                     SSPCON1         equ	4038	;# 
   444   000FC7                     SSPSTAT         equ	4039	;# 
   445   000FC8                     SSPADD          equ	4040	;# 
   446   000FC9                     SSPBUF          equ	4041	;# 
   447   000FCA                     T2CON           equ	4042	;# 
   448   000FCB                     PR2             equ	4043	;# 
   449   000FCB                     MEMCON          equ	4043	;# 
   450   000FCC                     TMR2            equ	4044	;# 
   451   000FCD                     T1CON           equ	4045	;# 
   452   000FCE                     TMR1            equ	4046	;# 
   453   000FCE                     TMR1L           equ	4046	;# 
   454   000FCF                     TMR1H           equ	4047	;# 
   455   000FD0                     RCON            equ	4048	;# 
   456   000FD1                     WDTCON          equ	4049	;# 
   457   000FD2                     HLVDCON         equ	4050	;# 
   458   000FD2                     LVDCON          equ	4050	;# 
   459   000FD3                     OSCCON          equ	4051	;# 
   460   000FD5                     T0CON           equ	4053	;# 
   461   000FD6                     TMR0            equ	4054	;# 
   462   000FD6                     TMR0L           equ	4054	;# 
   463   000FD7                     TMR0H           equ	4055	;# 
   464   000FD8                     STATUS          equ	4056	;# 
   465   000FD9                     FSR2            equ	4057	;# 
   466   000FD9                     FSR2L           equ	4057	;# 
   467   000FDA                     FSR2H           equ	4058	;# 
   468   000FDB                     PLUSW2          equ	4059	;# 
   469   000FDC                     PREINC2         equ	4060	;# 
   470   000FDD                     POSTDEC2        equ	4061	;# 
   471   000FDE                     POSTINC2        equ	4062	;# 
   472   000FDF                     INDF2           equ	4063	;# 
   473   000FE0                     BSR             equ	4064	;# 
   474   000FE1                     FSR1            equ	4065	;# 
   475   000FE1                     FSR1L           equ	4065	;# 
   476   000FE2                     FSR1H           equ	4066	;# 
   477   000FE3                     PLUSW1          equ	4067	;# 
   478   000FE4                     PREINC1         equ	4068	;# 
   479   000FE5                     POSTDEC1        equ	4069	;# 
   480   000FE6                     POSTINC1        equ	4070	;# 
   481   000FE7                     INDF1           equ	4071	;# 
   482   000FE8                     WREG            equ	4072	;# 
   483   000FE9                     FSR0            equ	4073	;# 
   484   000FE9                     FSR0L           equ	4073	;# 
   485   000FEA                     FSR0H           equ	4074	;# 
   486   000FEB                     PLUSW0          equ	4075	;# 
   487   000FEC                     PREINC0         equ	4076	;# 
   488   000FED                     POSTDEC0        equ	4077	;# 
   489   000FEE                     POSTINC0        equ	4078	;# 
   490   000FEF                     INDF0           equ	4079	;# 
   491   000FF0                     INTCON3         equ	4080	;# 
   492   000FF1                     INTCON2         equ	4081	;# 
   493   000FF2                     INTCON          equ	4082	;# 
   494   000FF3                     PROD            equ	4083	;# 
   495   000FF3                     PRODL           equ	4083	;# 
   496   000FF4                     PRODH           equ	4084	;# 
   497   000FF5                     TABLAT          equ	4085	;# 
   498   000FF6                     TBLPTR          equ	4086	;# 
   499   000FF6                     TBLPTRL         equ	4086	;# 
   500   000FF7                     TBLPTRH         equ	4087	;# 
   501   000FF8                     TBLPTRU         equ	4088	;# 
   502   000FF9                     PCLAT           equ	4089	;# 
   503   000FF9                     PC              equ	4089	;# 
   504   000FF9                     PCL             equ	4089	;# 
   505   000FFA                     PCLATH          equ	4090	;# 
   506   000FFB                     PCLATU          equ	4091	;# 
   507   000FFC                     STKPTR          equ	4092	;# 
   508   000FFD                     TOS             equ	4093	;# 
   509   000FFD                     TOSL            equ	4093	;# 
   510   000FFE                     TOSH            equ	4094	;# 
   511   000FFF                     TOSU            equ	4095	;# 
   512   000FC9                     _SSPBUF         set	4041
   513   000F8C                     _LATDbits       set	3980
   514   000FC5                     _SSPCON2bits    set	4037
   515   000FC6                     _SSPCON1bits    set	4038
   516   000FA1                     _PIR2bits       set	4001
   517   000F9E                     _PIR1bits       set	3998
   518   000FC8                     _SSPADD         set	4040
   519   000FC5                     _SSPCON2        set	4037
   520   000FC6                     _SSPCON1        set	4038
   521   000FC7                     _SSPSTATbits    set	4039
   522   000F95                     _TRISDbits      set	3989
   523                           
   524                           	psect	smallconst
   525   000600                     __psmallconst:
   526                           	callstack 0
   527   000600  00                 	db	0
   528   000601                     STR_1:
   529   000601  48                 	db	72	;'H'
   530   000602  65                 	db	101	;'e'
   531   000603  6C                 	db	108	;'l'
   532   000604  6C                 	db	108	;'l'
   533   000605  6F                 	db	111	;'o'
   534   000606  20                 	db	32
   535   000607  57                 	db	87	;'W'
   536   000608  6F                 	db	111	;'o'
   537   000609  72                 	db	114	;'r'
   538   00060A  6C                 	db	108	;'l'
   539   00060B  64                 	db	100	;'d'
   540   00060C  20                 	db	32
   541   00060D  21                 	db	33
   542   00060E  00                 	db	0
   543   00060F                     STR_2:
   544   00060F  50                 	db	80	;'P'
   545   000610  43                 	db	67	;'C'
   546   000611  46                 	db	70	;'F'
   547   000612  38                 	db	56	;'8'
   548   000613  35                 	db	53	;'5'
   549   000614  37                 	db	55	;'7'
   550   000615  34                 	db	52	;'4'
   551   000616  00                 	db	0
   552   000617  00                 	db	0	; dummy byte at the end
   553   000600                     __smallconst    set	__psmallconst
   554   000600                     __mediumconst   set	__psmallconst
   555   000002                     __activetblptr  equ	2
   556                           
   557                           ; #config settings
   558                           
   559                           	psect	cinit
   560   0008B6                     __pcinit:
   561                           	callstack 0
   562   0008B6                     start_initialization:
   563                           	callstack 0
   564   0008B6                     __initialization:
   565                           	callstack 0
   566   0008B6                     end_of_initialization:
   567                           	callstack 0
   568   0008B6                     __end_of__initialization:
   569                           	callstack 0
   570   0008B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   571   0008B8  6EF8               	movwf	tblptru,c
   572   0008BA  0100               	movlb	0
   573   0008BC  EF0C  F003         	goto	_main	;jump to C main() function
   574                           
   575                           	psect	cstackCOMRAM
   576   000001                     __pcstackCOMRAM:
   577                           	callstack 0
   578   000001                     I2C_writeData@data:
   579                           	callstack 0
   580   000001                     
   581                           ; 1 bytes @ 0x0
   582   000001                     	ds	1
   583   000002                     I2C_beginTransmission@address:
   584                           	callstack 0
   585   000002                     
   586                           ; 1 bytes @ 0x1
   587   000002                     	ds	1
   588   000003                     send_to_display@disp_arr:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x2
   592   000003                     	ds	1
   593   000004                     ??_send_to_display:
   594                           
   595                           ; 1 bytes @ 0x3
   596   000004                     	ds	1
   597   000005                     send_to_display@i:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x4
   601   000005                     	ds	2
   602   000007                     ??_lcd_cmd:
   603   000007                     ??_lcd_print:
   604                           
   605                           ; 1 bytes @ 0x6
   606   000007                     	ds	1
   607   000008                     lcd_cmd@cmd_arr:
   608                           	callstack 0
   609   000008                     lcd_print@data_arr:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x7
   613   000008                     	ds	4
   614   00000C                     lcd_cmd@cmd:
   615                           	callstack 0
   616   00000C                     lcd_print@data:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0xB
   620   00000C                     	ds	1
   621   00000D                     lcd_cmd@high_nib:
   622                           	callstack 0
   623   00000D                     lcd_print@high_nib:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0xC
   627   00000D                     	ds	1
   628   00000E                     lcd_cmd@low_nib:
   629                           	callstack 0
   630   00000E                     lcd_print@low_nib:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0xD
   634   00000E                     	ds	1
   635   00000F                     lcd_string@str:
   636                           	callstack 0
   637   00000F                     lcd_put_cursor@col:
   638                           	callstack 0
   639   00000F                     ??_lcd_clear:
   640                           
   641                           ; 1 bytes @ 0xE
   642   00000F                     	ds	1
   643   000010                     lcd_put_cursor@row:
   644                           	callstack 0
   645   000010                     
   646                           ; 1 bytes @ 0xF
   647   000010                     	ds	1
   648   000011                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x10
   651   000011                     	ds	2
   652                           
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   655 ;;
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 35 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   672 ;;      Params:         0       0       0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels required when called: 6
   678 ;; This function calls:
   679 ;;		_I2C_begin
   680 ;;		_lcd_clear
   681 ;;		_lcd_init
   682 ;;		_lcd_put_cursor
   683 ;;		_lcd_string
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text0
   690   000618                     __ptext0:
   691                           	callstack 0
   692   000618                     _main:
   693                           	callstack 25
   694   000618                     
   695                           ;main.c: 36:     TRISDbits.RD0 = 0;
   696   000618  9095               	bcf	149,0,c	;volatile
   697   00061A                     
   698                           ;main.c: 37:     I2C_begin();
   699   00061A  EC52  F004         	call	_I2C_begin	;wreg free
   700   00061E                     
   701                           ;main.c: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
   702   00061E  0E0D               	movlw	13
   703   000620  6E11               	movwf	??_main^0,c
   704   000622  0EFC               	movlw	252
   705   000624                     u147:
   706   000624  2EE8               	decfsz	wreg,f,c
   707   000626  D7FE               	bra	u147
   708   000628  2E11               	decfsz	??_main^0,f,c
   709   00062A  D7FC               	bra	u147
   710   00062C                     
   711                           ;main.c: 39:     lcd_init();
   712   00062C  EC28  F004         	call	_lcd_init	;wreg free
   713   000630                     
   714                           ;main.c: 40:     _delay((unsigned long)((10)*(4000000/4000.0)));
   715   000630  0E0D               	movlw	13
   716   000632  6E11               	movwf	??_main^0,c
   717   000634  0EFC               	movlw	252
   718   000636                     u157:
   719   000636  2EE8               	decfsz	wreg,f,c
   720   000638  D7FE               	bra	u157
   721   00063A  2E11               	decfsz	??_main^0,f,c
   722   00063C  D7FC               	bra	u157
   723   00063E                     l966:
   724                           
   725                           ;main.c: 43:         lcd_clear();
   726   00063E  EC47  F004         	call	_lcd_clear	;wreg free
   727   000642                     
   728                           ;main.c: 44:         lcd_put_cursor(0,0);
   729   000642  0E00               	movlw	0
   730   000644  6E0F               	movwf	lcd_put_cursor@col^0,c
   731   000646  0E00               	movlw	0
   732   000648  ECF9  F003         	call	_lcd_put_cursor
   733   00064C                     
   734                           ;main.c: 45:         lcd_string("Hello World !");
   735   00064C  0E01               	movlw	low STR_1
   736   00064E  6E0F               	movwf	lcd_string@str^0,c
   737   000650  ECC5  F003         	call	_lcd_string	;wreg free
   738   000654                     
   739                           ;main.c: 46:         lcd_put_cursor(1,7);
   740   000654  0E07               	movlw	7
   741   000656  6E0F               	movwf	lcd_put_cursor@col^0,c
   742   000658  0E01               	movlw	1
   743   00065A  ECF9  F003         	call	_lcd_put_cursor
   744   00065E                     
   745                           ;main.c: 47:         lcd_string("PCF8574");
   746   00065E  0E0F               	movlw	low STR_2
   747   000660  6E0F               	movwf	lcd_string@str^0,c
   748   000662  ECC5  F003         	call	_lcd_string	;wreg free
   749   000666                     
   750                           ;main.c: 49:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   751   000666  0E0B               	movlw	11
   752   000668  6E12               	movwf	(??_main+1)^0,c
   753   00066A  0E26               	movlw	38
   754   00066C  6E11               	movwf	??_main^0,c
   755   00066E  0E5E               	movlw	94
   756   000670                     u167:
   757   000670  2EE8               	decfsz	wreg,f,c
   758   000672  D7FE               	bra	u167
   759   000674  2E11               	decfsz	??_main^0,f,c
   760   000676  D7FC               	bra	u167
   761   000678  2E12               	decfsz	(??_main+1)^0,f,c
   762   00067A  D7FA               	bra	u167
   763   00067C  EF1F  F003         	goto	l966
   764   000680  EFFE  F03F         	goto	start
   765   000684                     __end_of_main:
   766                           	callstack 0
   767                           
   768 ;; *************** function _lcd_string *****************
   769 ;; Defined at:
   770 ;;		line 131 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  str             1   14[COMRAM] PTR unsigned char 
   773 ;;		 -> STR_2(8), STR_1(14), 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   785 ;;      Params:         1       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 5
   792 ;; This function calls:
   793 ;;		_lcd_print
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800   00078A                     __ptext1:
   801                           	callstack 0
   802   00078A                     _lcd_string:
   803                           	callstack 25
   804   00078A                     
   805                           ;main.c: 132:     while(*str != '\0') {
   806   00078A  EFD0  F003         	goto	l954
   807   00078E                     l950:
   808                           
   809                           ;main.c: 133:         lcd_print(*str);
   810   00078E  C00F  FFF6         	movff	lcd_string@str,tblptrl
   811   000792                     	if	1	;There is more than 1 active tblptr byte
   812   000792  0E06               	movlw	high __smallconst
   813   000794  6EF7               	movwf	tblptrh,c
   814   000796                     	endif
   815   000796                     	if	0	;tblptru may be non-zero
   816   000796                     	endif
   817   000796                     	if	0	;tblptru may be non-zero
   818   000796                     	endif
   819   000796  0008               	tblrd		*
   820   000798  50F5               	movf	tablat,w,c
   821   00079A  EC8D  F003         	call	_lcd_print
   822   00079E                     
   823                           ;main.c: 134:         str++;
   824   00079E  2A0F               	incf	lcd_string@str^0,f,c
   825   0007A0                     l954:
   826                           
   827                           ;main.c: 132:     while(*str != '\0') {
   828   0007A0  C00F  FFF6         	movff	lcd_string@str,tblptrl
   829   0007A4                     	if	1	;There is more than 1 active tblptr byte
   830   0007A4  0E06               	movlw	high __smallconst
   831   0007A6  6EF7               	movwf	tblptrh,c
   832   0007A8                     	endif
   833   0007A8                     	if	0	;tblptru may be non-zero
   834   0007A8                     	endif
   835   0007A8                     	if	0	;tblptru may be non-zero
   836   0007A8                     	endif
   837   0007A8  0008               	tblrd		*
   838   0007AA  50F5               	movf	tablat,w,c
   839   0007AC  0900               	iorlw	0
   840   0007AE  A4D8               	btfss	status,2,c
   841   0007B0  EFDC  F003         	goto	u131
   842   0007B4  EFDE  F003         	goto	u130
   843   0007B8                     u131:
   844   0007B8  EFC7  F003         	goto	l950
   845   0007BC                     u130:
   846   0007BC  0012               	return		;funcret
   847   0007BE                     __end_of_lcd_string:
   848                           	callstack 0
   849                           
   850 ;; *************** function _lcd_print *****************
   851 ;; Defined at:
   852 ;;		line 164 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  data            1    wreg     unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  data            1   11[COMRAM] unsigned char 
   857 ;;  data_arr        4    7[COMRAM] unsigned char [4]
   858 ;;  low_nib         1   13[COMRAM] unsigned char 
   859 ;;  high_nib        1   12[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   869 ;;      Params:         0       0       0       0       0       0       0
   870 ;;      Locals:         7       0       0       0       0       0       0
   871 ;;      Temps:          1       0       0       0       0       0       0
   872 ;;      Totals:         8       0       0       0       0       0       0
   873 ;;Total ram usage:        8 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 4
   876 ;; This function calls:
   877 ;;		_send_to_display
   878 ;; This function is called by:
   879 ;;		_lcd_string
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text2
   884   00071A                     __ptext2:
   885                           	callstack 0
   886   00071A                     _lcd_print:
   887                           	callstack 25
   888                           
   889                           ;incstack = 0
   890                           ;lcd_print@data stored from wreg
   891   00071A  6E0C               	movwf	lcd_print@data^0,c
   892   00071C                     
   893                           ;main.c: 165:     uint8_t data_arr[4], high_nib, low_nib;;main.c: 167:     high_nib = (d
      +                          ata & 0xF0);
   894   00071C  500C               	movf	lcd_print@data^0,w,c
   895   00071E  0BF0               	andlw	240
   896   000720  6E0D               	movwf	lcd_print@high_nib^0,c
   897                           
   898                           ;main.c: 168:     low_nib = (uint8_t)((data & 0x0F) << 4);
   899   000722  C00C  F007         	movff	lcd_print@data,??_lcd_print
   900   000726  0E0F               	movlw	15
   901   000728  1607               	andwf	??_lcd_print^0,f,c
   902   00072A  3807               	swapf	??_lcd_print^0,w,c
   903   00072C  0BF0               	andlw	240
   904   00072E  6E0E               	movwf	lcd_print@low_nib^0,c
   905                           
   906                           ;main.c: 171:     data_arr[0] = high_nib | 0x0D;
   907   000730  500D               	movf	lcd_print@high_nib^0,w,c
   908   000732  090D               	iorlw	13
   909   000734  6E08               	movwf	lcd_print@data_arr^0,c
   910                           
   911                           ;main.c: 172:     data_arr[1] = high_nib | 0x09;
   912   000736  500D               	movf	lcd_print@high_nib^0,w,c
   913   000738  0909               	iorlw	9
   914   00073A  6E09               	movwf	(lcd_print@data_arr+1)^0,c
   915                           
   916                           ;main.c: 173:     data_arr[2] = low_nib | 0x0D;
   917   00073C  500E               	movf	lcd_print@low_nib^0,w,c
   918   00073E  090D               	iorlw	13
   919   000740  6E0A               	movwf	(lcd_print@data_arr+2)^0,c
   920                           
   921                           ;main.c: 174:     data_arr[3] = low_nib | 0x09;
   922   000742  500E               	movf	lcd_print@low_nib^0,w,c
   923   000744  0909               	iorlw	9
   924   000746  6E0B               	movwf	(lcd_print@data_arr+3)^0,c
   925   000748                     
   926                           ;main.c: 176:     send_to_display(data_arr);
   927   000748  0E08               	movlw	low lcd_print@data_arr
   928   00074A  6E03               	movwf	send_to_display@disp_arr^0,c
   929   00074C  EC42  F003         	call	_send_to_display	;wreg free
   930   000750  0012               	return		;funcret
   931   000752                     __end_of_lcd_print:
   932                           	callstack 0
   933                           
   934 ;; *************** function _lcd_put_cursor *****************
   935 ;; Defined at:
   936 ;;		line 138 in file "main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  row             1    wreg     unsigned char 
   939 ;;  col             1   14[COMRAM] unsigned char 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  row             1   15[COMRAM] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   951 ;;      Params:         1       0       0       0       0       0       0
   952 ;;      Locals:         1       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0
   954 ;;      Totals:         2       0       0       0       0       0       0
   955 ;;Total ram usage:        2 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 5
   958 ;; This function calls:
   959 ;;		_lcd_cmd
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text3
   966   0007F2                     __ptext3:
   967                           	callstack 0
   968   0007F2                     _lcd_put_cursor:
   969                           	callstack 25
   970                           
   971                           ;incstack = 0
   972                           ;lcd_put_cursor@row stored from wreg
   973   0007F2  6E10               	movwf	lcd_put_cursor@row^0,c
   974   0007F4                     
   975                           ;main.c: 139:     switch(row) {
   976   0007F4  EF03  F004         	goto	l944
   977   0007F8                     l938:
   978   0007F8  8E0F               	bsf	lcd_put_cursor@col^0,7,c
   979                           
   980                           ;main.c: 141:         break;
   981   0007FA  EF0E  F004         	goto	l946
   982   0007FE                     l940:
   983   0007FE  0EC0               	movlw	192
   984   000800  120F               	iorwf	lcd_put_cursor@col^0,f,c
   985                           
   986                           ;main.c: 144:         break;
   987   000802  EF0E  F004         	goto	l946
   988   000806                     l944:
   989   000806  5010               	movf	lcd_put_cursor@row^0,w,c
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 2, Range of values is 0 to 1
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            7     4 (average)
   996                           ;	Chosen strategy is simple_byte
   997   000808  0A00               	xorlw	0	; case 0
   998   00080A  B4D8               	btfsc	status,2,c
   999   00080C  EFFC  F003         	goto	l938
  1000   000810  0A01               	xorlw	1	; case 1
  1001   000812  B4D8               	btfsc	status,2,c
  1002   000814  EFFF  F003         	goto	l940
  1003   000818  EF0E  F004         	goto	l946
  1004   00081C                     l946:
  1005                           
  1006                           ;main.c: 146:     lcd_cmd(col);
  1007   00081C  500F               	movf	lcd_put_cursor@col^0,w,c
  1008   00081E  ECA9  F003         	call	_lcd_cmd
  1009   000822  0012               	return		;funcret
  1010   000824                     __end_of_lcd_put_cursor:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _lcd_init *****************
  1014 ;; Defined at:
  1015 ;;		line 117 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1029 ;;      Params:         0       0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 5
  1036 ;; This function calls:
  1037 ;;		_lcd_cmd
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text4
  1044   000850                     __ptext4:
  1045                           	callstack 0
  1046   000850                     _lcd_init:
  1047                           	callstack 25
  1048   000850                     
  1049                           ;main.c: 119:     lcd_cmd(0x02);
  1050   000850  0E02               	movlw	2
  1051   000852  ECA9  F003         	call	_lcd_cmd
  1052                           
  1053                           ;main.c: 120:     lcd_cmd(0x28);
  1054   000856  0E28               	movlw	40
  1055   000858  ECA9  F003         	call	_lcd_cmd
  1056                           
  1057                           ;main.c: 121:     lcd_cmd(0x01);
  1058   00085C  0E01               	movlw	1
  1059   00085E  ECA9  F003         	call	_lcd_cmd
  1060                           
  1061                           ;main.c: 122:     lcd_cmd(0x0E);
  1062   000862  0E0E               	movlw	14
  1063   000864  ECA9  F003         	call	_lcd_cmd
  1064                           
  1065                           ;main.c: 123:     lcd_cmd(0x06);
  1066   000868  0E06               	movlw	6
  1067   00086A  ECA9  F003         	call	_lcd_cmd
  1068   00086E  0012               	return		;funcret
  1069   000870                     __end_of_lcd_init:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _lcd_clear *****************
  1073 ;; Defined at:
  1074 ;;		line 126 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         0       0       0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0
  1090 ;;      Temps:          1       0       0       0       0       0       0
  1091 ;;      Totals:         1       0       0       0       0       0       0
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 5
  1095 ;; This function calls:
  1096 ;;		_lcd_cmd
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text5
  1103   00088E                     __ptext5:
  1104                           	callstack 0
  1105   00088E                     _lcd_clear:
  1106                           	callstack 25
  1107   00088E                     
  1108                           ;main.c: 127:     lcd_cmd(0x01);
  1109   00088E  0E01               	movlw	1
  1110   000890  ECA9  F003         	call	_lcd_cmd
  1111   000894                     
  1112                           ;main.c: 128:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1113   000894  0E0D               	movlw	13
  1114   000896  6E0F               	movwf	??_lcd_clear^0,c
  1115   000898  0EFC               	movlw	252
  1116   00089A                     u177:
  1117   00089A  2EE8               	decfsz	wreg,f,c
  1118   00089C  D7FE               	bra	u177
  1119   00089E  2E0F               	decfsz	??_lcd_clear^0,f,c
  1120   0008A0  D7FC               	bra	u177
  1121   0008A2  0012               	return		;funcret
  1122   0008A4                     __end_of_lcd_clear:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _lcd_cmd *****************
  1126 ;; Defined at:
  1127 ;;		line 149 in file "main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  cmd             1    wreg     unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  cmd             1   11[COMRAM] unsigned char 
  1132 ;;  cmd_arr         4    7[COMRAM] unsigned char [4]
  1133 ;;  low_nib         1   13[COMRAM] unsigned char 
  1134 ;;  high_nib        1   12[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         7       0       0       0       0       0       0
  1146 ;;      Temps:          1       0       0       0       0       0       0
  1147 ;;      Totals:         8       0       0       0       0       0       0
  1148 ;;Total ram usage:        8 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 4
  1151 ;; This function calls:
  1152 ;;		_send_to_display
  1153 ;; This function is called by:
  1154 ;;		_lcd_init
  1155 ;;		_lcd_clear
  1156 ;;		_lcd_put_cursor
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text6
  1161   000752                     __ptext6:
  1162                           	callstack 0
  1163   000752                     _lcd_cmd:
  1164                           	callstack 25
  1165                           
  1166                           ;incstack = 0
  1167                           ;lcd_cmd@cmd stored from wreg
  1168   000752  6E0C               	movwf	lcd_cmd@cmd^0,c
  1169   000754                     
  1170                           ;main.c: 150:     uint8_t cmd_arr[4], high_nib, low_nib;;main.c: 152:     high_nib = (cm
      +                          d & 0xF0);
  1171   000754  500C               	movf	lcd_cmd@cmd^0,w,c
  1172   000756  0BF0               	andlw	240
  1173   000758  6E0D               	movwf	lcd_cmd@high_nib^0,c
  1174                           
  1175                           ;main.c: 153:     low_nib = (uint8_t)((cmd & 0x0F) << 4);
  1176   00075A  C00C  F007         	movff	lcd_cmd@cmd,??_lcd_cmd
  1177   00075E  0E0F               	movlw	15
  1178   000760  1607               	andwf	??_lcd_cmd^0,f,c
  1179   000762  3807               	swapf	??_lcd_cmd^0,w,c
  1180   000764  0BF0               	andlw	240
  1181   000766  6E0E               	movwf	lcd_cmd@low_nib^0,c
  1182                           
  1183                           ;main.c: 156:     cmd_arr[0] = high_nib | 0x0C;
  1184   000768  500D               	movf	lcd_cmd@high_nib^0,w,c
  1185   00076A  090C               	iorlw	12
  1186   00076C  6E08               	movwf	lcd_cmd@cmd_arr^0,c
  1187                           
  1188                           ;main.c: 157:  cmd_arr[1] = high_nib | 0x08;
  1189   00076E  500D               	movf	lcd_cmd@high_nib^0,w,c
  1190   000770  0908               	iorlw	8
  1191   000772  6E09               	movwf	(lcd_cmd@cmd_arr+1)^0,c
  1192                           
  1193                           ;main.c: 158:  cmd_arr[2] = low_nib | 0x0C;
  1194   000774  500E               	movf	lcd_cmd@low_nib^0,w,c
  1195   000776  090C               	iorlw	12
  1196   000778  6E0A               	movwf	(lcd_cmd@cmd_arr+2)^0,c
  1197                           
  1198                           ;main.c: 159:  cmd_arr[3] = low_nib | 0x08;
  1199   00077A  500E               	movf	lcd_cmd@low_nib^0,w,c
  1200   00077C  0908               	iorlw	8
  1201   00077E  6E0B               	movwf	(lcd_cmd@cmd_arr+3)^0,c
  1202   000780                     
  1203                           ;main.c: 161:     send_to_display(cmd_arr);
  1204   000780  0E08               	movlw	low lcd_cmd@cmd_arr
  1205   000782  6E03               	movwf	send_to_display@disp_arr^0,c
  1206   000784  EC42  F003         	call	_send_to_display	;wreg free
  1207   000788  0012               	return		;funcret
  1208   00078A                     __end_of_lcd_cmd:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _send_to_display *****************
  1212 ;; Defined at:
  1213 ;;		line 179 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  disp_arr        1    2[COMRAM] PTR unsigned char 
  1216 ;;		 -> lcd_print@data_arr(4), lcd_cmd@cmd_arr(4), 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  i               2    4[COMRAM] int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         1       0       0       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0       0       0
  1231 ;;      Totals:         4       0       0       0       0       0       0
  1232 ;;Total ram usage:        4 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 3
  1235 ;; This function calls:
  1236 ;;		_I2C_beginTransmission
  1237 ;;		_I2C_endTransmission
  1238 ;;		_I2C_ready
  1239 ;;		_I2C_writeData
  1240 ;; This function is called by:
  1241 ;;		_lcd_cmd
  1242 ;;		_lcd_print
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text7
  1247   000684                     __ptext7:
  1248                           	callstack 0
  1249   000684                     _send_to_display:
  1250                           	callstack 25
  1251   000684                     
  1252                           ;main.c: 180:     I2C_ready();
  1253   000684  EC6D  F003         	call	_I2C_ready	;wreg free
  1254   000688                     
  1255                           ;main.c: 181:     I2C_beginTransmission(0x40);
  1256   000688  0E40               	movlw	64
  1257   00068A  ECDF  F003         	call	_I2C_beginTransmission
  1258                           
  1259                           ;main.c: 183:     for(int i=0; i<4; i++) {
  1260   00068E  0E00               	movlw	0
  1261   000690  6E06               	movwf	(send_to_display@i+1)^0,c
  1262   000692  0E00               	movlw	0
  1263   000694  6E05               	movwf	send_to_display@i^0,c
  1264   000696                     l912:
  1265                           
  1266                           ;main.c: 184:         I2C_writeData(disp_arr[i]);
  1267   000696  5003               	movf	send_to_display@disp_arr^0,w,c
  1268   000698  2405               	addwf	send_to_display@i^0,w,c
  1269   00069A  6ED9               	movwf	fsr2l,c
  1270   00069C  6ADA               	clrf	fsr2h,c
  1271   00069E  50DF               	movf	indf2,w,c
  1272   0006A0  EC38  F004         	call	_I2C_writeData
  1273   0006A4                     
  1274                           ;main.c: 185:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1275   0006A4  0E1A               	movlw	26
  1276   0006A6  6E04               	movwf	??_send_to_display^0,c
  1277   0006A8  0EF8               	movlw	248
  1278   0006AA                     u187:
  1279   0006AA  2EE8               	decfsz	wreg,f,c
  1280   0006AC  D7FE               	bra	u187
  1281   0006AE  2E04               	decfsz	??_send_to_display^0,f,c
  1282   0006B0  D7FC               	bra	u187
  1283   0006B2  D000               	nop2	
  1284   0006B4                     
  1285                           ;main.c: 186:     }
  1286   0006B4  4A05               	infsnz	send_to_display@i^0,f,c
  1287   0006B6  2A06               	incf	(send_to_display@i+1)^0,f,c
  1288   0006B8  BE06               	btfsc	(send_to_display@i+1)^0,7,c
  1289   0006BA  EF68  F003         	goto	u121
  1290   0006BE  5006               	movf	(send_to_display@i+1)^0,w,c
  1291   0006C0  E109               	bnz	u120
  1292   0006C2  0E04               	movlw	4
  1293   0006C4  5C05               	subwf	send_to_display@i^0,w,c
  1294   0006C6  A0D8               	btfss	status,0,c
  1295   0006C8  EF68  F003         	goto	u121
  1296   0006CC  EF6A  F003         	goto	u120
  1297   0006D0                     u121:
  1298   0006D0  EF4B  F003         	goto	l912
  1299   0006D4                     u120:
  1300   0006D4                     
  1301                           ;main.c: 187:     I2C_endTransmission();
  1302   0006D4  EC12  F004         	call	_I2C_endTransmission	;wreg free
  1303   0006D8  0012               	return		;funcret
  1304   0006DA                     __end_of_send_to_display:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _I2C_endTransmission *****************
  1308 ;; Defined at:
  1309 ;;		line 103 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      unsigned char 
  1316 ;; Registers used:
  1317 ;;		cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1323 ;;      Params:         0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 1
  1330 ;; This function calls:
  1331 ;;		_I2C_ready
  1332 ;; This function is called by:
  1333 ;;		_send_to_display
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text8
  1338   000824                     __ptext8:
  1339                           	callstack 0
  1340   000824                     _I2C_endTransmission:
  1341                           	callstack 26
  1342   000824                     
  1343                           ;main.c: 104:     I2C_ready();
  1344   000824  EC6D  F003         	call	_I2C_ready	;wreg free
  1345   000828                     
  1346                           ;main.c: 105:     SSPCON2bits.PEN = 1;
  1347   000828  84C5               	bsf	197,2,c	;volatile
  1348   00082A                     l80:
  1349   00082A  B4C5               	btfsc	197,2,c	;volatile
  1350   00082C  EF1A  F004         	goto	u81
  1351   000830  EF1C  F004         	goto	u80
  1352   000834                     u81:
  1353   000834  EF15  F004         	goto	l80
  1354   000838                     u80:
  1355   000838                     
  1356                           ;main.c: 108:     if (!SSPSTATbits.P) {
  1357   000838  B8C7               	btfsc	199,4,c	;volatile
  1358   00083A  EF21  F004         	goto	u91
  1359   00083E  EF23  F004         	goto	u90
  1360   000842                     u91:
  1361   000842  EF26  F004         	goto	l83
  1362   000846                     u90:
  1363   000846                     
  1364                           ;main.c: 109:         LATDbits.LATD0 = 1;
  1365   000846  808C               	bsf	140,0,c	;volatile
  1366                           
  1367                           ;main.c: 110:         return 0;;	Return value of _I2C_endTransmission is never used
  1368   000848  EF27  F004         	goto	l84
  1369   00084C                     l83:
  1370                           
  1371                           ;main.c: 112:     LATDbits.LATD0 = 0;
  1372   00084C  908C               	bcf	140,0,c	;volatile
  1373   00084E                     l84:
  1374   00084E  0012               	return		;funcret
  1375   000850                     __end_of_I2C_endTransmission:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _I2C_beginTransmission *****************
  1379 ;; Defined at:
  1380 ;;		line 76 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  address         1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  address         1    1[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      unsigned char 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0
  1397 ;;      Totals:         1       0       0       0       0       0       0
  1398 ;;Total ram usage:        1 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		_I2C_ready
  1403 ;;		_I2C_writeData
  1404 ;; This function is called by:
  1405 ;;		_send_to_display
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text9
  1410   0007BE                     __ptext9:
  1411                           	callstack 0
  1412   0007BE                     _I2C_beginTransmission:
  1413                           	callstack 25
  1414                           
  1415                           ;incstack = 0
  1416                           ;I2C_beginTransmission@address stored from wreg
  1417   0007BE  6E02               	movwf	I2C_beginTransmission@address^0,c
  1418   0007C0                     
  1419                           ;main.c: 77:     I2C_ready();
  1420   0007C0  EC6D  F003         	call	_I2C_ready	;wreg free
  1421   0007C4                     
  1422                           ;main.c: 78:     SSPCON2bits.SEN = 1;
  1423   0007C4  80C5               	bsf	197,0,c	;volatile
  1424   0007C6                     l65:
  1425   0007C6  B0C5               	btfsc	197,0,c	;volatile
  1426   0007C8  EFE8  F003         	goto	u61
  1427   0007CC  EFEA  F003         	goto	u60
  1428   0007D0                     u61:
  1429   0007D0  EFE3  F003         	goto	l65
  1430   0007D4                     u60:
  1431   0007D4                     
  1432                           ;main.c: 81:     if (!SSPSTATbits.S) {
  1433   0007D4  B6C7               	btfsc	199,3,c	;volatile
  1434   0007D6  EFEF  F003         	goto	u71
  1435   0007DA  EFF1  F003         	goto	u70
  1436   0007DE                     u71:
  1437   0007DE  EFF4  F003         	goto	l810
  1438   0007E2                     u70:
  1439   0007E2                     
  1440                           ;main.c: 82:         LATDbits.LATD0 = 1;
  1441   0007E2  808C               	bsf	140,0,c	;volatile
  1442                           
  1443                           ;main.c: 83:         return 0;;	Return value of _I2C_beginTransmission is never used
  1444   0007E4  EFF8  F003         	goto	l69
  1445   0007E8                     l810:
  1446                           
  1447                           ;main.c: 85:     I2C_writeData(address);
  1448   0007E8  5002               	movf	I2C_beginTransmission@address^0,w,c
  1449   0007EA  EC38  F004         	call	_I2C_writeData
  1450   0007EE                     
  1451                           ;main.c: 86:     LATDbits.LATD0 = 0;
  1452   0007EE  908C               	bcf	140,0,c	;volatile
  1453   0007F0                     l69:
  1454   0007F0  0012               	return		;funcret
  1455   0007F2                     __end_of_I2C_beginTransmission:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _I2C_writeData *****************
  1459 ;; Defined at:
  1460 ;;		line 90 in file "main.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  data            1    wreg     unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  data            1    0[COMRAM] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      unsigned char 
  1467 ;; Registers used:
  1468 ;;		wreg, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1474 ;;      Params:         0       0       0       0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 1
  1481 ;; This function calls:
  1482 ;;		_I2C_ready
  1483 ;; This function is called by:
  1484 ;;		_I2C_beginTransmission
  1485 ;;		_send_to_display
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text10
  1490   000870                     __ptext10:
  1491                           	callstack 0
  1492   000870                     _I2C_writeData:
  1493                           	callstack 26
  1494                           
  1495                           ;incstack = 0
  1496                           ;I2C_writeData@data stored from wreg
  1497   000870  6E01               	movwf	I2C_writeData@data^0,c
  1498   000872                     
  1499                           ;main.c: 91:     I2C_ready();
  1500   000872  EC6D  F003         	call	_I2C_ready	;wreg free
  1501   000876                     
  1502                           ;main.c: 92:     SSPBUF = data;
  1503   000876  C001  FFC9         	movff	I2C_writeData@data,4041	;volatile
  1504   00087A                     l72:
  1505   00087A  A69E               	btfss	158,3,c	;volatile
  1506   00087C  EF42  F004         	goto	u51
  1507   000880  EF44  F004         	goto	u50
  1508   000884                     u51:
  1509   000884  EF3D  F004         	goto	l72
  1510   000888                     u50:
  1511   000888                     
  1512                           ;main.c: 94:     PIR1bits.SSPIF = 0;
  1513   000888  969E               	bcf	158,3,c	;volatile
  1514                           
  1515                           ;main.c: 96:     if (SSPCON2bits.ACKSTAT) {
  1516   00088A  50C5               	movf	197,w,c	;volatile
  1517   00088C  0012               	return		;funcret
  1518   00088E                     __end_of_I2C_writeData:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _I2C_ready *****************
  1522 ;; Defined at:
  1523 ;;		line 64 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1537 ;;      Params:         0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_I2C_beginTransmission
  1547 ;;		_I2C_writeData
  1548 ;;		_I2C_endTransmission
  1549 ;;		_send_to_display
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text11
  1554   0006DA                     __ptext11:
  1555                           	callstack 0
  1556   0006DA                     _I2C_ready:
  1557                           	callstack 26
  1558   0006DA                     
  1559                           ;main.c: 66:     if (PIR2bits.BCLIF || SSPCON1bits.WCOL) {
  1560   0006DA  B6A1               	btfsc	161,3,c	;volatile
  1561   0006DC  EF72  F003         	goto	u11
  1562   0006E0  EF74  F003         	goto	u10
  1563   0006E4                     u11:
  1564   0006E4  EF7B  F003         	goto	l58
  1565   0006E8                     u10:
  1566   0006E8  AEC6               	btfss	198,7,c	;volatile
  1567   0006EA  EF79  F003         	goto	u21
  1568   0006EE  EF7B  F003         	goto	u20
  1569   0006F2                     u21:
  1570   0006F2  EF7D  F003         	goto	l59
  1571   0006F6                     u20:
  1572   0006F6                     l58:
  1573                           
  1574                           ;main.c: 67:         PIR2bits.BCLIF = 0;
  1575   0006F6  96A1               	bcf	161,3,c	;volatile
  1576                           
  1577                           ;main.c: 68:         SSPCON1bits.WCOL = 0;
  1578   0006F8  9EC6               	bcf	198,7,c	;volatile
  1579   0006FA                     l59:
  1580   0006FA  B0C7               	btfsc	199,0,c	;volatile
  1581   0006FC  EF82  F003         	goto	u31
  1582   000700  EF84  F003         	goto	u30
  1583   000704                     u31:
  1584   000704  EF7D  F003         	goto	l59
  1585   000708                     u30:
  1586   000708  B4C7               	btfsc	199,2,c	;volatile
  1587   00070A  EF89  F003         	goto	u41
  1588   00070E  EF8B  F003         	goto	u40
  1589   000712                     u41:
  1590   000712  EF7D  F003         	goto	l59
  1591   000716                     u40:
  1592   000716                     
  1593                           ;main.c: 73:     PIR1bits.SSPIF = 0;
  1594   000716  969E               	bcf	158,3,c	;volatile
  1595   000718  0012               	return		;funcret
  1596   00071A                     __end_of_I2C_ready:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _I2C_begin *****************
  1600 ;; Defined at:
  1601 ;;		line 54 in file "main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1615 ;;      Params:         0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text12
  1629   0008A4                     __ptext12:
  1630                           	callstack 0
  1631   0008A4                     _I2C_begin:
  1632                           	callstack 30
  1633   0008A4                     
  1634                           ;main.c: 55:     SSPSTATbits.SMP = 1;
  1635   0008A4  8EC7               	bsf	199,7,c	;volatile
  1636                           
  1637                           ;main.c: 56:     SSPSTATbits.CKE = 0;
  1638   0008A6  9CC7               	bcf	199,6,c	;volatile
  1639   0008A8                     
  1640                           ;main.c: 58:     SSPCON1 = 0x28;
  1641   0008A8  0E28               	movlw	40
  1642   0008AA  6EC6               	movwf	198,c	;volatile
  1643   0008AC                     
  1644                           ;main.c: 59:     SSPCON2 = 0x00;
  1645   0008AC  6AC5               	clrf	197,c	;volatile
  1646                           
  1647                           ;main.c: 60:     SSPADD = 9;
  1648   0008AE  0E09               	movlw	9
  1649   0008B0  6EC8               	movwf	200,c	;volatile
  1650   0008B2                     
  1651                           ;main.c: 61:     PIR1bits.SSPIF = 0;
  1652   0008B2  969E               	bcf	158,3,c	;volatile
  1653   0008B4  0012               	return		;funcret
  1654   0008B6                     __end_of_I2C_begin:
  1655                           	callstack 0
  1656                           
  1657                           	psect	rparam
  1658   000001                     ___rparam_used  equ	1
  1659   000000                     ___param_bank   equ	0
  1660   000000                     __Lparam        equ	__Lrparam
  1661   000000                     __Hparam        equ	__Hrparam
  1662                           tosu	equ	0xFFF
  1663                           tosh	equ	0xFFE
  1664                           tosl	equ	0xFFD
  1665                           stkptr	equ	0xFFC
  1666                           pclatu	equ	0xFFB
  1667                           pclath	equ	0xFFA
  1668                           pcl	equ	0xFF9
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           indf0	equ	0xFEF
  1676                           postinc0	equ	0xFEE
  1677                           postdec0	equ	0xFED
  1678                           preinc0	equ	0xFEC
  1679                           plusw0	equ	0xFEB
  1680                           fsr0h	equ	0xFEA
  1681                           fsr0l	equ	0xFE9
  1682                           wreg	equ	0xFE8
  1683                           indf1	equ	0xFE7
  1684                           postinc1	equ	0xFE6
  1685                           postdec1	equ	0xFE5
  1686                           preinc1	equ	0xFE4
  1687                           plusw1	equ	0xFE3
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           bsr	equ	0xFE0
  1691                           indf2	equ	0xFDF
  1692                           postinc2	equ	0xFDE
  1693                           postdec2	equ	0xFDD
  1694                           preinc2	equ	0xFDC
  1695                           plusw2	equ	0xFDB
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[8]), 

    send_to_display@disp_arr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_cmd@cmd_arr(COMRAM[4]), lcd_print@data_arr(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_lcd_put_cursor
    _lcd_string->_lcd_print
    _lcd_print->_send_to_display
    _lcd_put_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_send_to_display
    _send_to_display->_I2C_beginTransmission
    _I2C_beginTransmission->_I2C_writeData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1626
                                             16 COMRAM     2     2      0
                          _I2C_begin
                          _lcd_clear
                           _lcd_init
                     _lcd_put_cursor
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     0      1     428
                                             14 COMRAM     1     0      1
                          _lcd_print
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            8     8      0     381
                                              6 COMRAM     8     8      0
                    _send_to_display
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cursor                                       2     1      1     436
                                             14 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     381
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     381
                                             14 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              8     8      0     381
                                              6 COMRAM     8     8      0
                    _send_to_display
 ---------------------------------------------------------------------------------
 (3) _send_to_display                                      4     3      1     137
                                              2 COMRAM     4     3      1
              _I2C_beginTransmission
                _I2C_endTransmission
                          _I2C_ready
                      _I2C_writeData
 ---------------------------------------------------------------------------------
 (4) _I2C_endTransmission                                  0     0      0       0
                          _I2C_ready
 ---------------------------------------------------------------------------------
 (4) _I2C_beginTransmission                                1     1      0      30
                                              1 COMRAM     1     1      0
                          _I2C_ready
                      _I2C_writeData
 ---------------------------------------------------------------------------------
 (4) _I2C_writeData                                        1     1      0      15
                                              0 COMRAM     1     1      0
                          _I2C_ready
 ---------------------------------------------------------------------------------
 (5) _I2C_ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_begin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_begin
   _lcd_clear
     _lcd_cmd
       _send_to_display
         _I2C_beginTransmission
           _I2C_ready
           _I2C_writeData
             _I2C_ready
         _I2C_endTransmission
           _I2C_ready
         _I2C_ready
         _I2C_writeData
   _lcd_init
     _lcd_cmd
   _lcd_put_cursor
     _lcd_cmd
   _lcd_string
     _lcd_print
       _send_to_display

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBIGSFRlll       652      0       0      0.0%
BITBIGSFRh          57      0       0      0.0%
BITBIGSFRlh         36      0       0      0.0%
BITBIGSFRllh        20      0       0      0.0%
COMRAM              95     18      18     18.9%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BIGRAM            1535      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Aug 12 23:45:56 2025

                  _SSPSTATbits 0FC7                             l53 08B4                             l61 0716  
                           l62 0718                             l72 087A                             l80 082A  
                           l65 07C6                             l58 06F6                             l74 0888  
                           l82 0838                             l90 08A2                             l59 06FA  
                           l67 07D4                             l83 084C                             l76 088C  
                           l84 084E                             l69 07F0                             l87 086E  
                           l96 07BC                             u10 06E8                             u11 06E4  
                           u20 06F6                             u21 06F2                             u30 0708  
                           u31 0704                             u40 0716                             u41 0712  
                           u50 0888                             u51 0884                             u60 07D4  
                           u61 07D0                             u70 07E2                             u71 07DE  
                           u80 0838                             u81 0834                             u90 0846  
                           u91 0842         __end_of_lcd_put_cursor 0824                 lcd_cmd@cmd_arr 0008  
                          l103 0822                            l114 06D8                            l106 0788  
                          l109 0750                            l810 07E8                            l812 07EE  
                          l804 07C0                            l820 0846                            l806 07C4  
                          l808 07E2                            l816 0824                            l920 06D4  
                          l912 0696                            l904 0684                            l850 08A8  
                          l818 0828                            l914 06A4                            l906 0688  
                          l922 0754                            l930 0850                            l852 08AC  
                          l916 06B4                            l924 0780                            l932 088E  
                          l940 07FE                            l854 08B2                            l790 06DA  
                          l918 06B8                            l934 0894                            l926 071C  
                          l950 078E                            l848 08A4                            l792 06E8  
                          l944 0806                            l936 07F4                            l928 0748  
                          l952 079E                            l960 061E                            l794 0708  
                          l946 081C                            l938 07F8                            l954 07A0  
                          l970 064C                            l962 062C                            l796 0872  
                          l948 078A                            l972 0654                            l964 0630  
                          l956 0618                            l798 0876                            l974 065E  
                          l966 063E                            l958 061A                            l976 0666  
                          l968 0642                            u120 06D4                            u121 06D0  
                          u130 07BC                            u131 07B8                            u147 0624  
                          u157 0636                            u167 0670                            u177 089A  
                          u187 06AA                            wreg 0FE8                 lcd_cmd@low_nib 000E  
              lcd_cmd@high_nib 000D                           STR_1 0601                           STR_2 060F  
  __end_of_I2C_endTransmission 0850                           _main 0618                           fsr2h 0FDA  
                         indf2 0FDF                           fsr2l 0FD9                           start 7FFC  
                 ___param_bank 0000                ?_lcd_put_cursor 000F                          ?_main 0001  
      send_to_display@disp_arr 0003                __end_of_lcd_cmd 078A              __end_of_I2C_begin 08B6  
                        tablat 0FF5              __end_of_I2C_ready 071A                          status 0FD8  
              __initialization 08B6                   __end_of_main 0684              lcd_print@data_arr 0008  
                       ??_main 0011              lcd_print@high_nib 000D                  __activetblptr 0002  
                       _SSPADD 0FC8                         _SSPBUF 0FC9                  lcd_print@data 000C  
             __end_of_lcd_init 0870                         isa$std 0001                      ??_lcd_cmd 0007  
                 __mediumconst 0600                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                  lcd_string@str 000F                     __accesstop 0060  
      __end_of__initialization 08B6                  ___rparam_used 0001                 __pcstackCOMRAM 0001  
            I2C_writeData@data 0001          _I2C_beginTransmission 07BE               ??_lcd_put_cursor 0010  
            ??_send_to_display 0004                        _SSPCON1 0FC6                        _SSPCON2 0FC5  
                   _lcd_string 078A                      ?_lcd_init 0001                      _I2C_begin 08A4  
                      __Hparam 0000                      _I2C_ready 06DA                        __Lparam 0000  
            __end_of_lcd_clear 08A4                  _I2C_writeData 0870              __end_of_lcd_print 0752  
                 __psmallconst 0600                        __pcinit 08B6                        __ramtop 0600  
                      __ptext0 0618                        __ptext1 078A                        __ptext2 071A  
                      __ptext3 07F2                        __ptext4 0850                        __ptext5 088E  
                      __ptext6 0752                        __ptext7 0684                        __ptext8 0824  
                      __ptext9 07BE                        _lcd_cmd 0752         ?_I2C_beginTransmission 0001  
                   ??_lcd_init 000F           end_of_initialization 08B6                  __Lmediumconst 0000  
                   ?_I2C_begin 0001                     ?_I2C_ready 0001                 ?_I2C_writeData 0001  
                    _TRISDbits 0F95                     lcd_cmd@cmd 000C                    ?_lcd_string 000F  
             send_to_display@i 0005            start_initialization 08B6               lcd_print@low_nib 000E  
            lcd_put_cursor@col 000F              lcd_put_cursor@row 0010                    ??_I2C_begin 0001  
              ??_I2C_writeData 0001                    ??_I2C_ready 0001                _send_to_display 0684  
          _I2C_endTransmission 0824           ?_I2C_endTransmission 0001                      _lcd_clear 088E  
                    _lcd_print 071A   I2C_beginTransmission@address 0002                       ?_lcd_cmd 0001  
      ??_I2C_beginTransmission 0002                    __smallconst 0600        __end_of_send_to_display 06DA  
                     _LATDbits 0F8C                       _PIR1bits 0F9E                       _PIR2bits 0FA1  
        ??_I2C_endTransmission 0001                     ?_lcd_clear 0001                     ?_lcd_print 0001  
                 ??_lcd_string 0010                       __Hrparam 0000                       __Lrparam 0000  
           __end_of_lcd_string 07BE                       __ptext10 0870                       __ptext11 06DA  
                     __ptext12 08A4                       _lcd_init 0850               ?_send_to_display 0003  
                     isa$xinst 0000                    ??_lcd_clear 000F                    ??_lcd_print 0007  
        __end_of_I2C_writeData 088E                 _lcd_put_cursor 07F2  __end_of_I2C_beginTransmission 07F2  
                  _SSPCON1bits 0FC6                    _SSPCON2bits 0FC5  
